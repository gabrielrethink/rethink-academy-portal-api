// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


enum Roles {
  STUDENT
  EMBASSADOR
  RETHINKER
}

enum Levels {
  LOW
  MEDIUM
  HIGH
}

model User {
  id      String   @id @default(uuid())
  email   String   @unique
  name    String?
  surname String?
  role    Roles @default(STUDENT)
  profile Profile?
  whatched Whatched?

  @@map("user")
}

model Profile {
  id     String  @id @default(uuid())
  bio    String?
  avatar String?
  social Json?
  user   User    @relation(fields: [userId], references: [id])
  userId String  @unique

  @@map("profile")
}

model Trail {
  id      String   @id @default(uuid())
  name    String   @unique
  description String
  course Course[]
  
  @@map("trail")
}

model Course {
  id String @id @default(uuid())
  name String
  description String
  level Levels
  workload Int
  learning String
  skills String
  trail   Trail    @relation(fields: [trailId], references: [id])
  trailId String
  classes Classes[]
  teacher Teacher @relation(fields: [teacherId], references: [id])
  teacherId String

  @@map("course")
}

model Classes {
  id String @id @default(uuid())
  name String
  url String
  course Course @relation(fields: [courseId], references: [id])
  courseId String
  order Int
  description String
  module Int

  @@map("classe")
}

model Whatched {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  whatched String[]

  @@map("whatched")

}

model Teacher {
  id String @id @default(uuid())
  name String
  office String
  avatar String
  course Course[]

  @@map("teacher")

}